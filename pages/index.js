import Head from "next/head"; // Head component
import Image from "next/image"; // Image component
import Link from "next/link"; // Link component
import Feature from "../components/Feature"; // Feature component from components folder
import { sanityClient, urlFor } from "../sanity"; // SanityClient and urlFor from sanity.js file

export default function Home({ blogs }) {
  // console.log(blogs);
  return (
    <div className="transition-all">
      <Head>
        {/* Website Title */}
        <title>Readle</title>
        <meta name="description" content="Generated by create next app" />{" "}
        {/* Website Description */}
        <link rel="icon" href="/favicon.ico" /> {/* Website Favicon or icon */}
      </Head>
      <Feature /> {/* Feature Component */}
      {/* Blogs Section */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6 p-2 md:p-6 my-10">
        {blogs.map((blog) => (
          <Link key={blog._id} href={`/blog/${blog.slug.current}`}>
            <div className=" border group cursor-pointer rounded-lg overflow-hidden">
              <img
                className="  h-64 w-full object-cover group-hover:scale-105 transition-transform duration-200 ease-in-out"
                src={urlFor(blog.mainImage).url()}
                alt="Connection error"
              />
              <div className="flex justify-between p-5 bg-white">
                <div>
                  <h1 className="hover:underline underline-offset-2 text-lg md:text-xl font-Poppins font-semibold">
                    {blog.title}
                  </h1>
                  <p className="text-md font-Poppins">
                    {blog.description} - by {blog.author.name}
                  </p>
                </div>
                <img
                  className="h-12 w-12 rounded-full object-cover"
                  src={urlFor(blog.author.image).url()}
                  alt=""
                />
              </div>
            </div>
          </Link>
        ))}
      </div>
    </div>
  );
}

// SSR (Server Side Rendering)

export const getServerSideProps = async () => {
  const query = `*[ _type == "blog" ]{
    _id,
    title,
    author->{
      name,
      image
    },
    description,
    mainImage,
    slug,
    publishedAt,
  }`;
  const blogs = await sanityClient.fetch(query);

  return {
    props: {
      blogs,
    },
  };
};
